# DigitalOcean App Platform Configuration
# For GDPR-compliant deployment in EU region

name: gonogo-blog
region: fra  # Frankfurt - EU region for GDPR compliance

services:
- name: web
  source_dir: /
  github:
    repo: your-username/gonogo  # Update with your GitHub repo
    branch: main
    deploy_on_push: true

  run_command: python -m uvicorn src.be.main:app --host 0.0.0.0 --port $PORT
  environment_slug: python
  instance_count: 1
  instance_size_slug: basic-xxs  # Can scale up as needed

  # Health check
  health_check:
    http_path: /health
    initial_delay_seconds: 10
    period_seconds: 10
    timeout_seconds: 5
    success_threshold: 1
    failure_threshold: 3

  # Environment variables
  envs:
  - key: ENVIRONMENT
    value: production
  - key: DEBUG
    value: "false"
  - key: SECRET_KEY
    scope: RUN_AND_BUILD_TIME
    type: SECRET
  - key: DATABASE_URL
    scope: RUN_AND_BUILD_TIME
    type: SECRET
  - key: GDPR_TEST_MODE
    value: "false"
  - key: DATA_RETENTION_DAYS
    value: "1095"  # 3 years as per GDPR
  - key: ANONYMIZE_IPS_AFTER_DAYS
    value: "30"
  - key: REQUIRE_CONSENT
    value: "true"

  # HTTP configuration
  http_port: 8000

  # Routes
  routes:
  - path: /
  - path: /static
    preserve_path_prefix: true

# Database
databases:
- name: gonogo-db
  engine: PG
  version: "15"
  size: basic
  num_nodes: 1

# Static files (if needed later)
static_sites:
- name: static-assets
  source_dir: /static
  routes:
  - path: /static

# Jobs for maintenance tasks
jobs:
- name: gdpr-cleanup
  source_dir: /
  github:
    repo: your-username/gonogo
    branch: main

  run_command: python -c "from src.security.gdpr.service import GDPRService; from sqlalchemy import create_engine; from sqlalchemy.orm import sessionmaker; import os; engine = create_engine(os.getenv('DATABASE_URL')); Session = sessionmaker(bind=engine); session = Session(); service = GDPRService(session); service.anonymize_expired_data(); session.close()"
  environment_slug: python

  # Run daily at 2 AM UTC
  kind: CRON
  schedule: "0 2 * * *"

  envs:
  - key: DATABASE_URL
    scope: RUN_TIME
    type: SECRET

# Alerts (DigitalOcean monitoring)
alerts:
- rule: CPU_UTILIZATION
  value: 80
- rule: MEM_UTILIZATION
  value: 80
- rule: RESTART_COUNT
  value: 5