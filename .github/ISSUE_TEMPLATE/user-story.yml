name: ðŸ“– User Story
description: Create a new user story within an epic
title: "US-XXXXX: [Brief description of the user story]"
labels: ["user-story", "needs-triage"]
projects: ["gonogo/1"]
assignees: []
body:
  - type: markdown
    attributes:
      value: |
        ## User Story Creation

        Create a user story within an epic. Keep it simple - you can add details later.

  - type: textarea
    id: user-story
    attributes:
      label: User Story
      description: What do you want to achieve?
      placeholder: |
        **As a** blog visitor
        **I want** to search for blog posts by keyword
        **So that** I can quickly find relevant content
    validations:
      required: true

  - type: textarea
    id: business-value
    attributes:
      label: Business Value (Optional)
      description: Why is this user story important?
      placeholder: "Improves user experience by making content discoverable"
    validations:
      required: false

  - type: input
    id: story-points
    attributes:
      label: Story Points (Optional)
      description: Effort estimation (0-21 Fibonacci scale)
      placeholder: "5"
    validations:
      required: false

  - type: input
    id: sprint
    attributes:
      label: Sprint (Optional)
      description: Sprint assignment
      placeholder: "Sprint 1"
    validations:
      required: false

  - type: dropdown
    id: priority
    attributes:
      label: Priority
      description: User story priority level
      options:
        - low
        - medium
        - high
        - critical
      default: 1
    validations:
      required: false

  - type: dropdown
    id: target-release-version
    attributes:
      label: Target Release Version (Optional)
      description: Target release for this story
      options:
        - v1.0.0
        - v1.1.0
        - v1.2.0
        - v1.3.0
        - v2.0.0
        - Future Release
    validations:
      required: false

  - type: dropdown
    id: component
    attributes:
      label: Component (Optional)
      description: Primary component this user story affects
      options:
        - Frontend/UI
        - Backend/API
        - Database
        - Security/GDPR
        - Testing
        - CI/CD
        - Documentation
    validations:
      required: false

  - type: textarea
    id: acceptance-criteria-functional
    attributes:
      label: Acceptance Criteria - Functional Requirements
      description: Specific, testable requirements using Given/When/Then format
      placeholder: |
        - [ ] **Given** I am on the blog homepage, **When** I enter a search term, **Then** I see relevant blog posts
        - [ ] **Given** I search for a keyword, **When** results are displayed, **Then** they are ranked by relevance
        - [ ] **Given** no results are found, **When** I search, **Then** I see a helpful "no results" message
    validations:
      required: false

  - type: checkboxes
    id: gdpr-considerations
    attributes:
      label: GDPR Considerations
      description: Does this involve personal data?
      options:
        - label: Involves personal data processing
        - label: GDPR compliance review needed
        - label: Not applicable

  - type: textarea
    id: gdpr-notes
    attributes:
      label: GDPR Considerations Notes (Optional)
      description: Detailed GDPR considerations if applicable
      placeholder: "Describe any privacy implications, data processing needs, or compliance requirements"
    validations:
      required: false

  - type: textarea
    id: dependencies
    attributes:
      label: Dependencies (Optional)
      description: What other user stories or requirements must be completed first?
      placeholder: |
        - US-XXXXX: Other user story that must be done first
        - Infrastructure or technical requirements
    validations:
      required: false

  - type: textarea
    id: blocks
    attributes:
      label: Blocks (Optional)
      description: What other user stories or requirements are blocked by this?
      placeholder: |
        - US-XXXXX: User story that depends on this
        - Infrastructure changes that depend on this
    validations:
      required: false

  - type: input
    id: affects-versions
    attributes:
      label: Affects Versions (Optional)
      description: Versions this story affects
      placeholder: "v1.0.0, v1.1.0"
    validations:
      required: false

  - type: checkboxes
    id: bdd-scenarios
    attributes:
      label: BDD Scenarios
      description: BDD test scenarios status
      options:
        - label: Has BDD scenarios defined
        - label: BDD scenarios need to be created
        - label: Not applicable

  - type: textarea
    id: technical-notes
    attributes:
      label: Technical Notes (Optional)
      description: Implementation hints or technical considerations
      placeholder: |
        - Consider search result caching for performance
        - Ensure search queries are properly escaped
    validations:
      required: false

  - type: markdown
    attributes:
      value: |
        ## Component Assignment

        **Component Selection**: User Stories can optionally specify a component that represents the primary system area they affect.

        **Component Inheritance Rules**:
        - **User Stories**: Can specify their own component (optional field)
        - **Defects**: Inherit component from their parent User Story (if specified)
        - **Tests**: Inherit component from their parent User Story (if specified)
        - **Epics**: Automatically inherit all unique components from their child User Stories

        **Flexibility**: All component fields are optional to allow issue creation when parent epics or user stories don't exist yet.

        **Component Options**:
        - **Frontend/UI**: User interface, web components, styling, templates
        - **Backend/API**: Server logic, API endpoints, business rules, services
        - **Database**: Schema changes, migrations, data models, queries
        - **Security/GDPR**: Authentication, authorization, privacy compliance
        - **Testing**: Test infrastructure, quality assurance tools, test automation
        - **CI/CD**: Build pipelines, deployment automation, GitHub Actions
        - **Documentation**: User guides, technical docs, API documentation

        ## Next Steps

        1. Story will be reviewed and refined during backlog grooming
        2. BDD scenarios will be created in technical documentation
        3. Story will be added to the Requirements Traceability Matrix
        4. Implementation will follow the [BDD + RTM Development Workflow](../CLAUDE.md#bdd--rtm-development-workflow)

        **Traceability** - This story will be automatically linked to the parent epic and tracked in the RTM.